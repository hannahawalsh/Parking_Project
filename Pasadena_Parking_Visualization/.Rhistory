# Get the ticket count by day of the week
weekticket = count(cleaned_parking$Weekday)
weekticket = weekticket[with(weekticket, order(x)),]
t = table(cleaned_parking$Weekday)
barplot(t)
t = t[with(t, order(x))]
View(weekticket)
weekticket = count(cleaned_parking$Weekday)
weekticket = weekticket[with(weekticket, order(freq)),]
barplot(weekticket$freq, names.arg = weekticket$x)
barplot(weekticket$freq, names.arg = weekticket$x, border = NA, col = "hotpink")
barplot(weekticket$freq, names.arg = weekticket$x, border = NA, col = "hotpink", ylab = "Number of Tickets")
barplot(weekticket$freq, names.arg = weekticket$x, border = NA, col = "hotpink", ylab = "Number of Tickets", ylim = c(0, 1500))
barplot(weekticket$freq, names.arg = weekticket$x, border = NA, col = "hotpink", ylab = "Number of Tickets", ylim = c(0, 1600))
order(weekticket)
weekticket[order[weekticket]]
weekticket[order(weekticket)]
weekticket[order(weekticket$x)]
weekticket[order(weekticket$x),]
?factor
weekticket$x = factor(daily$DoW, levels= c("Sunday", "Monday",
"Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
weekticket$x = factor(weekticket$x, levels= c("Sunday", "Monday",
"Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
weekticket[order(weekticket$x),]
# Get the ticket count by day of the week
weekticket = count(cleaned_parking$Weekday)
weekticket$x = factor(weekticket$x, levels = c("Sunday", "Monday", "Tuesday",
"Wednesday", "Thursday", "Friday",
"Saturday"))
weekticket[order(weekticket$x),]
barplot(weekticket$freq, names.arg = weekticket$x, border = NA,
col = "hotpink", ylab = "Number of Tickets", ylim = c(0, 1600))
weekticket = weekticket[order(weekticket$x),]
barplot(weekticket$freq, names.arg = weekticket$x, border = NA,
col = "hotpink", ylab = "Number of Tickets", ylim = c(0, 1600))
barplot(weekticket$freq, names.arg = weekticket$x, border = NA,
col = "navyblue", ylab = "Number of Tickets", ylim = c(0, 1600))
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
?column
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
?reactive
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
?selectInput
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
a = "hi"
a == "hi"
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
shiny::runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?selectizeInput
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?observeEvent
runApp('Desktop/CatanDice')
?reactive
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
a = "hi"
print(a)
?list
a = "h"
b = "a"
c = "m"
list(a,b,c)
c(a,b,c)
d = c(a,b,c)
e = list(a,b,c)
d[1]
e[2]
a = "hannah"
b = "matt"
c = "laura"
d = "william"
h = list(a,b,c,d)
j = c(a,b,c,d)
h[1]
j[1]
j[5]
j[4]
h[4]
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?Random
Random()
?runif
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
s = runif(1,1,100000)
set.seed(s)
s = sample(1:100000, 1)
s
set.seed(s)
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?renderPrint
?reactiveValues
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?character
is.character("hannah")
is.character(4)
is.character(as.character(3))
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?fluidRow
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
5%%4
9 %% 3
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
sample(c(0,1), size=1, prob=c(0.2, 0.8))
sample(c(0,1), size=1, prob=c(0.2, 0.8))
sample(c(0,1), size=1, prob=c(0.2, 0.8))
sample(c(0,1), size=1, prob=c(0.2, 0.8))
sample(c(0,1), size=1, prob=c(0.2, 0.8))
sample(c(0,1), size=10, prob=c(0.2, 0.8))
sample(c(0,1), size=10, prob=c(0.2, 0.8), replace=F)
sample(c(0,1), size=10, prob=c(0.2, 0.8), replace=T)
sample(c(0,1), size=10, prob=c(0.2, 0.8), replace=T)
sample(c(0,1), size=10, prob=c(0.2, 0.8), replace=T)
sample(c(0,1), size=10, prob=c(0.2, 0.8), replace=T)
sample(c(0,1), size=10, prob=c(0.2, 0.8), replace=T)
dicerange = 2:12;
dicefreq = c(1,2,3,4,5,6,5,4,3,2,1)
roll = sample(dicerange, size = 1, prob=dicefreq, replace = T)
sample(dicerange, size = 1, prob=dicefreq, replace = T)
sample(dicerange, size = 1, prob=dicefreq, replace = T)
sample(dicerange, size = 10, prob=dicefreq, replace = T)
hist(sample(dicerange, size = 100, prob=dicefreq, replace = T)
)
a =sample(dicerange, size = 100, prob=dicefreq, replace = T)
hist(a)
a = []
a = NA
a = c(a, 1)
a = c(a, sample(dicerange, size = 100, prob = dicefreq, replace = T))
hist(a)
a = 1
b = 2
c = 4
d = c(1,3,5,3,7)
a = T
a | length(d > 10)
a | length(d < 10)
b | length(d < 10)
b | length(d > 10)
f = FALSE
f | length(d < 10)
f | length(d > 10)
f | length(d)>10
a | length(d)>10
f | length(d)<10
b | length(d)<10
b | length(d)>10
table(c(1,4,6,75,34,56,23,465,1,2`1,1,3,45,2,1,1))
table(c(1,4,6,75,34,56,23,465,1,21,1,3,45,2,1,1))
t = table(c(1,4,6,75,34,56,23,465,1,21,1,3,45,2,1,1))
t(1)
t(5)
t[1]
t[5]
5[5,3]
5[5,2]
a = t[5]
a
as.numeric(a)
as.numeric(t)
shiny::runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
dicerange = 2:12
dicefreq = c(1,2,3,4,5,6,5,4,3,2,1)
hist(sample(c(0,1), size = 1000, prob=c(1-input$random, input$random),
replace = T))
a = sample(c(0,1), size = 1, prob=c(1-input$random, input$random),
replace = T)
hist(sample(dicerange, size = 1000, prob=dicefreq, replace = T))
hist(sample(dicerange, size = 100000, prob=dicefreq, replace = T))
hist(sample(dicerange, size = 10000000, prob=dicefreq, replace = T))
sum(c(1,4,56))
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?reactiveValues
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
a = c(5,3,7,3,2,1,5,7)
a = a[-length(a)]
a
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
shiny::runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
?head
a = c(5,3,2,6,6,4,23,56,2,3,1485868)
a = head(a, -1)
a
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
a = rep(0,10)
b = c(1,5,3,2,3,4,5,2,1,3,5,3,1,1,3,5,5,2,2,1,1,4,4)
table(b)
plot(b)
hist(b)
b = c(b, 7,8,5)
table(b)
runApp('Desktop/CatanDice')
names(b[1])
names(b)
t = table(b)
names(b)
names(t)
names(t[1])
?table
df = data.frame(table(b))
View(df)
df["6"]
df["6"] = 1
df
df[b]
df[b,]
df$b
a = c(1,3,5,1,4,6,3,2,1,3,1,4,4,8)
b = table(a)
b
match(a, 1:9)
?match
match(b, 1:9)
b
df = data.frame(1:9)
nums = 1:9
df = data.frame(nums)
df = data.frame(toString(nums))
df = data.frame(nums)
hist(b)
b
a = c(4,3,5,2,5,2,1,4,5,3,1,4,7,9)
t = table(a)
hist(a)
?hist
counts(hist(a))
h = hist(a)
h$counts
h = hist(a, breaks = 9)
h = hist(a, breaks = 10)
h = hist(a, breaks = 100)
h$counts
h = hist(a, breaks = 10)
h$counts
h = hist(a, breaks = 11)
h$counts
d = c(2,4,2,6,2,6,11,6,3,6,7,2,4,6,2,6,4,5,5,8,6,7,7,7,7)
hist(d, breaks=10)$counts
hist(d, breaks=12)$counts
hist(d, breaks=20)$counts
hist(d, breaks=19)$counts
hist(d, breaks=18)$counts
length(hist(d, breaks=19)$counts)
length(hist(d, breaks=15)$counts)
length(hist(d, breaks=10)$counts)
length(hist(d, breaks=11)$counts)
length(hist(d, breaks=12)$counts)
length(hist(d, breaks=13)$counts)
length(hist(d, breaks=c(2,1))$counts)
bins = 2:12
hist(d, breaks=bins)
hist(d, breaks=bins)$counts
bins = 1:12
hist(d, breaks=bins)$counts
bins = bins + 0.5
hist(d, breaks=bins)$counts
dr = 2:12
df = c(1,2,3,4,5,6,5,4,3,2,1)
rs = sample(dr, size = 15, prob=df, replace=T)
h = hist(rs)
h = hist(rs, breaks = dr)
h = hist(rs, breaks = c(1,dr)+.5)
rs
h$counts
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
ddd = h$counts
ddd
ddd/sum(ddd)
2^(300*(ddd/sum(ddd) - df/sum(df)))
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
shiny::runApp('Desktop/CatanDice')
a = "1, 4, 2, 6, 1"
b = as.numeric(a)
?numericInput
as.numeric("5")
as.list(a)
as.list(strsplit(a, ",")[[1]])
b = as.numeric(as.list(strsplit(a, ",")[[1]]))
b = as.numeric((strsplit(a, ",")[[1]]))
b = as.numeric((strsplit(a, ",")))
b = as.numeric((strsplit(a, ",")[[1]]))
d = "6"
as.numeric((strsplit(d, ",")[[1]]))
?renderImage
?img
?imageOutput
137*1.5
1 in b
1 %in% b
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
runApp('Desktop/CatanDice')
setwd("/Users/hannahwalsh/Desktop/Parking_Data/Pasadena_Parking_Visualization/www")
setwd("/Users/hannahwalsh/Desktop/Parking_Data/Pasadena_Parking_Visualization/")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
t[t>75]
source('~/Desktop/Parking_Data/PercentOfCarsSummary.R', echo=TRUE)
source('~/Desktop/Parking_Data/PercentOfCarsSummary.R', echo=TRUE)
t[t>75]
t
t = table(Complete_Data$License)
t = sort(t, decreasing = TRUE)
t[t>75]
repeat_offenders = t[t>4]
repeat_offenders[1]
a = repeat_offenders[1]
a = repeat_offenders[1,1]
names(a)
names(t)
filename = "Citation_Data_CSV.csv"
Parking_Data = read.csv(filename, sep=",", header=TRUE)
setwd("/Users/hannahwalsh/Desktop/Parking_Data/")
filename = "Citation_Data_CSV.csv"
Parking_Data = read.csv(filename, sep=",", header=TRUE)
library(leaflet)
runApp('Pasadena_Parking_Visualization')
t = table(Parking_Data$License)
t = sort(t, decreasing = TRUE)
repeat_offenders = names(t[t>4])
setwd("/Users/hannahwalsh/Desktop/Parking_Data/")
t = table(Parking_Data$License)
t = sort(t, decreasing = TRUE)
repeat_offenders = names(t[t>4])
View(Parking_Data)
View(Parking_Data)
shiny::runApp('Pasadena_Parking_Visualization')
install.packages(leaflet)
install.packages("leaflet")
runApp('Pasadena_Parking_Visualization')
runApp('Pasadena_Parking_Visualization')
runApp('Pasadena_Parking_Visualization')
runApp('Pasadena_Parking_Visualization')
