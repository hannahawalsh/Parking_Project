toString(Parking_Data$Issue.Time)
)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
d = strptime(b, "%m/%d/%y %I:%M %p")
b = paste(toString(Parking_Data$Issue.Date[1]), toString(Parking_Data$Issue.Time[1]))
d = strptime(b, "%m/%d/%y %I:%M %p")
d
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
warnings()
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
strptime("5/10/1994 1:34 PM", "%m/%d/%y %I:%M, %p")
b = paste(toString(Parking_Data$Issue.Date[1]), toString(Parking_Data$Issue.Time[1]))
d = strptime(b, "%m/%d/%y %I:%M %p")
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
warnings()
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
as.difftime()
?as.difftime()
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
warnings()
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
Parking_Data$Issue.Time[1]
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
Parking_Data$Issue.Time[1]
toString(Parking_Data$Issue.Time[1])
a = toString(Parking_Data$Issue.Time[1])
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
Parking_Data$Issue.Time[1]
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
Parking_Data$Issue.Time[1]
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
?strftime
TicketsPerDay = count(Parking_Data$Issue.Date)
TicketsPerDay = TicketsPerDay[with(TicketsPerDay, order(Issue.Date)),]
View(TicketsPerDay)
plot(TicketsPerDay)
Date = Parking_Data$Issue.Date[complete.cases(Parking_Data$Issue.Date),]
Date = Parking_Data$Issue.Date[complete.cases(Parking_Data$Issue.Date)]
TicketsPerDay = count(Date)
View(TicketsPerDay)
TicketsPerDay = table(Date)
plot(TicketsPerDay)
plot(Date)
plot(TicketsPerDay)
plot(TicketsPerDay, type="b")
plot(TicketsPerDay, type="l")
View(Location_Data)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
plot(TicketsPerDay)
View(Complete_Data)
Date = Complete_Data$Issue.Date[complete.cases(Parking_Data$Issue.Date)]
TicketsPerDay = table(Date)
plot(TicketsPerDay)
Complete_Data$Issue.Date[1]
toString(Complete_Data$Issue.Date[1])
a = toString(Complete_Data$Issue.Date[1])
strsplit(a, " ")
b = strsplit(a, " ")
b
b[1]
b[[1]]
is.list(b)
as.vector(b)
d = as.vector(strsplit(Complete_Data$Issue.Date, " "))
d = as.vector(strsplit(toString(Complete_Data$Issue.Date, " ")))
d = as.vector(strsplit(toString(Complete_Data$Issue.Date[1], " ")))
d = toString(Complete_Data$Issue.Date[1])
d = as.vector(strsplit(d, " "))
d
d[1]
d = strsplit(d, " ")
d = toString(Complete_Data$Issue.Date[1])
e = strsplit(d, " ")
e
f = as.vector(e)
f
?strptime
a = strptime(Complete_Data$Issue.Date, "%m/%d/%y %I:%M %p")
a
a = strptime(Complete_Data$Issue.Date[1], "%m/%d/%y %I:%M %p")
a
a = strptime(Complete_Data$Issue.Date[1], "%m/%d/%y %I:%M:%S %p")
a
a = strptime(toString(Complete_Data$Issue.Date[1]), "%m/%d/%y %I:%M:%S %p")
a
toString(Complete_Data$Issue.Date[1])
a = strptime(toString(Complete_Data$Issue.Date[1]), "%D %I:%M:%S %p")
a
a = strptime(toString(Complete_Data$Issue.Date[1]), "%m/%d/%Y %I:%M:%S %p")
for (i in 1:length(Complete_Data$Issue.Date))
{
Complete_Data["DateTime"] = strptime(toString(Complete_Data$Issue.Date[i]),
"%m/%d/%Y %I:%M:%S %p")
}
for (i in 1:length(Complete_Data$Issue.Date))
{
Complete_Data$Issue.Date[i] = strptime(toString(Complete_Data$Issue.Date[i]),
"%m/%d/%Y %I:%M:%S %p")
}
warnings()
for (i in 1:3)
{
Complete_Data$Issue.Date[i] = strptime(toString(Complete_Data$Issue.Date[i]),
"%m/%d/%Y %I:%M:%S %p")
}
setwd("/Users/hannahwalsh/Desktop/Parking_Data/www/cleanedData/")
files = list.files(pattern="*.csv")
Complete_Data = read.csv(files[1], sep = ",", header = TRUE)
for (i in 2:length(files))
{
dat = read.csv(files[i], sep = ",", header = TRUE)
Complete_Data = rbind(Complete_Data, dat)
}
for (i in 1:3)
{
Complete_Data$Issue.Date[i] = strptime(toString(Complete_Data$Issue.Date[i]),
"%m/%d/%Y %I:%M:%S %p")
}
for (i in 4:6)
{
str = toString(Complete_Data$Issue.Date[i])
Complete_Data$Issue.Date[i] = strptime(str, "%m/%d/%Y %I:%M:%S %p")
}
i = 7
str = toString(Complete_Data$Issue.Date[i])
strptime(str, "%m/%d/%Y %I:%M:%S %p")
i = 300
str = toString(Complete_Data$Issue.Date[i])
strptime(str, "%m/%d/%Y %I:%M:%S %p")
datetime = NA
for (i in 10:15)
{
str = toString(Complete_Data$Issue.Date[i])
datetime[i] = strptime(str, "%m/%d/%Y %I:%M:%S %p")
}
d = strptime(str, "%m/%d/%Y %I:%M:%S %p")
typeof(d)
unlist(d)
df = data.frame()
df["date"] = d
warnings()
View(df)
summary(d)
print(d)
as.PosiXct(d)
as.POSIXct(d)
df["date"] = as.POSIXct(d)
is.na.POSIXlt(d)
df["date"] = toString(d)
df = data.frame(toString(d))
df
str1 = toString(Complete_Data$Issue.Date[350])
str2 = toString(Complete_Data$Issue.Date[400])
str3 = toString(Complete_Data$Issue.Date[450])
e = strptime(str1, "%m/%d/%Y %I:%M:%S %p")
f = strptime(str2, "%m/%d/%Y %I:%M:%S %p")
g = strptime(str3, "%m/%d/%Y %I:%M:%S %p")
e = toString(e)
f = toString(f); g = toString(g)
d = toString(d)
df = data.frame(c(d,e,f,g))
df
plot(df)
plot(as.POSIXct(df))
for (i in 1:length(Complete_Data$Issue.Date))
{
str = toString(Complete_Data$Issue.Date[i])
datetime = strptime(str, "%m/%d/%Y %I:%M:%S %p")
datetime = toString(str)
Complete_Data$DateTime[i] = datetime
}
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
Addresses[1]
Addresses[2]
Addresses[200]
###
## Write a CSV of the lat and long of huge data set
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
for (i in 1:length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
write.csv(coords, file="Locations_Complete")
###
View(coords)
which(is.na(Complete_Data$Block.Number))
which(is.na(Complete_Data$Location))
View(coords)
write.csv(coords, file="Locations")
?write.csv
setwd("/Users/hannahwalsh/Desktop/)
setwd("/Users/hannahwalsh/Desktop/")
write.csv(coords, file="Locations")
table(Complete_Data$License)
t = table(Complete_Data$License)
max(t)
which.max(t)
barplot(t)
barplot(t)
Complete_Data[15721]
Complete_Data[,15721]
head(t)
sort(t)
a = sort(t)
head(a)
?sort
a = sort(t, decreasing = TRUE)
head(a)
a[1:20]
a[1:40]
a[1:100]
plot(a)
a[200]
a[500]
length(a)
a[1000]
?which
a = 10:1
a = -a
which(a>-5)
which(a>-5)[1]
which(a>-5, arr.ind = TRUE)[1]
x = which(a>-5, arr.ind = TRUE)[1]
x
which(1:10 > 3, arr.ind = TRUE)
which(a < 5, arr.ind = T)[1]
t = table(Complete_Data$License)
t = sort(t)
t = sort(t, decreasing = TRUE)
head(t)
which(t < 5, arr.ind = T)[1]
which(t < 5, arr.ind = F)[1]
Complete_Data[7627,]
t[7627]
length(t)
sum(t[1: 7626 ])
sum(t[1: 7626 ])/236542
lim3 = which(t<3)[1]
tot_high = sum(t[1:(lim-1)])
percentOfCars = (lim-1)/length(t)
percentOfTickets = tot_high/length(t)
tot_high = sum(t[1:(lim3-1)])
percentOfCars = (lim3-1)/length(t)
percentOfTickets = tot_high/length(t)
lim3
tot_high
percentOfCars
percentOfTickets
?function
HighTickets(3)
source('~/Desktop/Parking_Data/PercentOfCarsSummary.R', echo=TRUE)
?range
range(Complete_Data$Violation.Base.Amount)
z = Complete_Data$Violation.Base.Amount
z[z == NOVI]
z[z == "NOVI"]
z[z == "NOVI"] = NA
range(z)
range(z, na.rm = TRUE)
table(z)
z[z=="Automobile"] = NA
range(z)
range(z, na.rm = TRUE)
max(z)
?max
max(z, na.rm = T)
z = as.numeric(z)
range(z)
max(z, na.rm = T)
range(z, na.rm = TRUE)
range(Complete_Data$Violation.Base.Amount)
table(Complete_Data$Violation.Base.Amount)
setwd("/Users/hannahwalsh/Desktop/Parking_Data/www/cleanedData/")
files = list.files(pattern="*.csv")
Complete_Data = read.csv(files[1], sep = ",", header = TRUE)
for (i in 2:length(files))
{
dat = read.csv(files[i], sep = ",", header = TRUE)
Complete_Data = rbind(Complete_Data, dat)
}
###
## Write a CSV of the lat and long of huge data set
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
for (i in 5333:length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
setwd("/Users/hannahwalsh/Desktop/")
write.csv(coords, file="Locations")
###
###
## Write a CSV of the lat and long of huge data set
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
#skip 5333
for (i in 5334:length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
setwd("/Users/hannahwalsh/Desktop/")
write.csv(coords, file="Locations")
###
###
## Write a CSV of the lat and long of huge data set
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
#skip 5333
for (i in 5334:length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
setwd("/Users/hannahwalsh/Desktop/")
write.csv(coords, file="Locations")
###
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
#skip 5333
for (i in 1:2)#length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
?tryCatch
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
#skip 5333
for (i in 5335:length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
setwd("/Users/hannahwalsh/Desktop/")
write.csv(coords, file="Locations")
###
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
#skip 5333
for (i in 5336:length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
setwd("/Users/hannahwalsh/Desktop/")
write.csv(coords, file="Locations")
###
coords
###
## Write a CSV of the lat and long of huge data set
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
#skip 5333, 5334, 5335
for (i in 5336:length(Complete_Data$Location))
{
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
View(coords)
a = Addresses[5333]
aa = street2coordinates(a)
print(source('Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('Parking_Data/First_UI_for_Parking_Data.R')$value)
source('~/Desktop/Parking_Data/Initial_Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Initial_Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Initial_Plots.R', echo=TRUE)
Date
source('~/Desktop/Parking_Data/MapTesting.R', echo=TRUE)
source('~/Desktop/Parking_Data/MapTesting.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
source('~/Desktop/Parking_Data/Plots.R')
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
print(source('~/Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
print(source('~/Desktop/Parking_Data/First_UI_for_Parking_Data.R')$value)
?street2coordinates
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
for (i in 5333:length(Complete_Data$Location))
{
street2coordinates <- function(address, session=getCurlHandle())
{
api <- paste(getOption("RDSTK_api_base"), "/street2coordinates/", sep="")
get.addy <- getURL(paste(api, URLencode(address), sep=""), curl=session)
clean.addy <- lapply(fromJSON(get.addy),
lapply,
function(x) ifelse(is.null(x), NA, x))
result <- ldply(clean.addy, data.frame)
names(result)[1] <- "full.address"
return(result)
}
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
# Load any packages I want to use
library(RDSTK)
# Import Data
setwd("/Users/hannahwalsh/Desktop/Parking_Data/")
filename1 = "Citation_Data_CSV.csv"
Parking_Data = read.csv(filename1, sep=",", header=TRUE)
setwd("/Users/hannahwalsh/Desktop/Parking_Data/www/")
filename2 = "Lats&Longs.csv"
Location_Data = read.csv(filename2, sep=",", header = TRUE)
setwd("/Users/hannahwalsh/Desktop/Parking_Data/www/cleanedData/")
files = list.files(pattern="*.csv")
Complete_Data = read.csv(files[1], sep = ",", header = TRUE)
for (i in 2:length(files))
{
dat = read.csv(files[i], sep = ",", header = TRUE)
Complete_Data = rbind(Complete_Data, dat)
}
###
## Write a CSV of the lat and long of huge data set
AddLat = NA
AddLong = NA
Addresses = paste(Complete_Data$Block.Number, Complete_Data$Location,
"Pasadena, CA")
#skip 5333, 5334, 5335
for (i in 5333:length(Complete_Data$Location))
{
street2coordinates <- function(address, session=getCurlHandle())
{
api <- paste(getOption("RDSTK_api_base"), "/street2coordinates/", sep="")
get.addy <- getURL(paste(api, URLencode(address), sep=""), curl=session)
clean.addy <- lapply(fromJSON(get.addy),
lapply,
function(x) ifelse(is.null(x), NA, x))
result <- ldply(clean.addy, data.frame)
names(result)[1] <- "full.address"
return(result)
}
info = street2coordinates(Addresses[i])
AddLat[i] = info$latitude
AddLong[i] = info$longitude
}
coords = data.frame(AddLong, AddLat)
colnames(coords) = c("Longitude", "Latitude")
t = table(Complete_Data$License)
t = sort(t, decreasing = T)
head(t)
winner = "06845L1"
t[t>50]
runApp('~/Desktop/Parking_Data/Pasadena Parking Visualization')
runApp('~/Desktop/Parking_Data/Pasadena Parking Visualization')
rsconnect::deployApp('/Users/hannahwalsh/Desktop/Parking_Data/')
rsconnect::deployApp('/Users/hannahwalsh/Desktop/Parking_Data/')
rsconnect::deployApp('/Users/hannahwalsh/Desktop/Parking_Data/Pasadena_Parking_Visualization')
runApp('~/Desktop/Parking_Data/Pasadena_Parking_Visualization')
runApp('~/Desktop/Parking_Data/Pasadena_Parking_Visualization')
runApp('~/Desktop/Parking_Data/Pasadena_Parking_Visualization')
runApp('~/Desktop/Parking_Data/Pasadena_Parking_Visualization')
source('~/Desktop/Parking_Data/Plots.R', echo=TRUE)
runApp('~/Desktop/Parking_Data/Pasadena_Parking_Visualization')
setwd("/Users/hannahwalsh/Desktop/Parking_Data/Pasadena_Parking_Visualization/www")
